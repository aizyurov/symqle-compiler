public interface SelectStatement<T> : QueryBuilder<T>
{}

/* declaration imports -- will be propagated to classes, which mimic this */
import java.util.List;
import org.symqle.core.Database;
import java.sql.SQLException;
@ThreadSafe
public abstract class AbstractSelectStatement<T> implements SelectStatement<T>
/* implementation import -- will NOT be propagated to classes, which mimic this */
{
    // TODO add scroll
    public List<T> list(final Database database)  throws SQLException {
        final SqlContext context = new SqlContext();
        context.set(FromClause.class, new FromClause());
        context.set(ColumnNameProvider.class, new ColumnNameProvider());
        this.z$prepare$select_statement(context);
        final List<T> list = new LinkedList<T>();
        final Query<T> query = z$sqlOfselect_statement(context);
        database.query(query, new IteratorCallback<Row>() {
            public int iterate(final Row row) throws SQLException {
                list.add(query.extract(row));
                return 1;
            }
        });
        return list;
    }
}
